{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\so960\\\\Desktop\\\\workspace\\\\learn-react-emotion-diary\\\\src\\\\pages\\\\Diary.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport { getStringDate } from \"../util/date\";\nimport { emotionList } from \"../util/emotion\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Diary = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기!!`;\n  }, []);\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n\n      if (targetDiary) {\n        // 일기가 존재할 때\n        setData(targetDiary);\n      } else {\n        // 일기가 없을 때\n        alert(\"없는 일기입니다.\");\n        navigate(\"/\", {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList]);\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  } else {\n    const curEmotionData = emotionList.find(it => parseInt(it.emotion_id) === parseInt(data.emotion));\n    console.log(curEmotionData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n        headText: `${getStringDate(new Date(data.date))} 기록`,\n        leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: \"< 뒤로가기\",\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this),\n        rightChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: \"수정하기\",\n          onClick: () => navigate(`/edit/${data.id}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: [\"diary_img_wrapper\", `diary_img_wrapper_${data.emotion}`].join(\" \"),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: curEmotionData.emotion_img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"emotion_descript\",\n              children: curEmotionData.emotion_descript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"diary_content_wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Diary, \"kri/UPfg3VhfUkJ23VL3LyJ/cE4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Diary;\nexport default Diary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"sources":["C:/Users/so960/Desktop/workspace/learn-react-emotion-diary/src/pages/Diary.js"],"names":["useState","useContext","useEffect","useNavigate","useParams","DiaryStateContext","getStringDate","emotionList","MyHeader","MyButton","Diary","id","diaryList","navigate","data","setData","titleElement","document","getElementsByTagName","innerHTML","length","targetDiary","find","it","parseInt","alert","replace","curEmotionData","emotion_id","emotion","console","log","Date","date","join","emotion_img","emotion_descript","content"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { DiaryStateContext } from \"../App\";\r\nimport { getStringDate } from \"../util/date\";\r\nimport { emotionList } from \"../util/emotion\";\r\n\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport MyButton from \"../components/MyButton\";\r\n\r\nconst Diary = () => {\r\n  const { id } = useParams();\r\n  const diaryList = useContext(DiaryStateContext);\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    const titleElement = document.getElementsByTagName(\"title\")[0];\r\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기!!`;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (diaryList.length >= 1) {\r\n      const targetDiary = diaryList.find(\r\n        (it) => parseInt(it.id) === parseInt(id)\r\n      );\r\n\r\n      if (targetDiary) {\r\n        // 일기가 존재할 때\r\n        setData(targetDiary);\r\n      } else {\r\n        // 일기가 없을 때\r\n        alert(\"없는 일기입니다.\");\r\n        navigate(\"/\", { replace: true });\r\n      }\r\n    }\r\n  }, [id, diaryList]);\r\n\r\n  if (!data) {\r\n    return <div className=\"DiaryPage\">로딩중입니다...</div>;\r\n  } else {\r\n    const curEmotionData = emotionList.find(\r\n      (it) => parseInt(it.emotion_id) === parseInt(data.emotion)\r\n    );\r\n    console.log(curEmotionData);\r\n\r\n    return (\r\n      <div className=\"DiaryPage\">\r\n        <MyHeader\r\n          headText={`${getStringDate(new Date(data.date))} 기록`}\r\n          leftChild={\r\n            <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\r\n          }\r\n          rightChild={\r\n            <MyButton\r\n              text={\"수정하기\"}\r\n              onClick={() => navigate(`/edit/${data.id}`)}\r\n            />\r\n          }\r\n        />\r\n        <article>\r\n          <section>\r\n            <h4>오늘의 감정</h4>\r\n            <div\r\n              className={[\r\n                \"diary_img_wrapper\",\r\n                `diary_img_wrapper_${data.emotion}`,\r\n              ].join(\" \")}\r\n            >\r\n              <img src={curEmotionData.emotion_img} />\r\n              <div className=\"emotion_descript\">\r\n                {curEmotionData.emotion_descript}\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section>\r\n            <h4>오늘의 일기</h4>\r\n            <div className=\"diary_content_wrapper\">\r\n              <p>{data.content}</p>\r\n            </div>\r\n          </section>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Diary;\r\n"]},"metadata":{},"sourceType":"module"}