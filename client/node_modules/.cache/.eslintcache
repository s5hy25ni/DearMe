[{"/Users/eunhasu777/projects/workspace/DearMe/client/src/index.js":"1","/Users/eunhasu777/projects/workspace/DearMe/client/src/App.js":"2","/Users/eunhasu777/projects/workspace/DearMe/client/src/pages/Diary.js":"3","/Users/eunhasu777/projects/workspace/DearMe/client/src/pages/Home.js":"4","/Users/eunhasu777/projects/workspace/DearMe/client/src/pages/Edit.js":"5","/Users/eunhasu777/projects/workspace/DearMe/client/src/pages/New.js":"6","/Users/eunhasu777/projects/workspace/DearMe/client/src/components/MyHeader.js":"7","/Users/eunhasu777/projects/workspace/DearMe/client/src/util/emotion.js":"8","/Users/eunhasu777/projects/workspace/DearMe/client/src/util/date.js":"9","/Users/eunhasu777/projects/workspace/DearMe/client/src/components/MyButton.js":"10","/Users/eunhasu777/projects/workspace/DearMe/client/src/components/DiaryEditor.js":"11","/Users/eunhasu777/projects/workspace/DearMe/client/src/components/MyFooter.js":"12","/Users/eunhasu777/projects/workspace/DearMe/client/src/components/DiaryList.js":"13","/Users/eunhasu777/projects/workspace/DearMe/client/src/components/DiaryItem.js":"14","/Users/eunhasu777/projects/workspace/DearMe/client/src/components/EmotionItem.js":"15"},{"size":219,"mtime":1667722625684,"results":"16","hashOfConfig":"17"},{"size":2704,"mtime":1667722625684,"results":"18","hashOfConfig":"17"},{"size":3020,"mtime":1667722625684,"results":"19","hashOfConfig":"17"},{"size":2275,"mtime":1667727153957,"results":"20","hashOfConfig":"17"},{"size":1065,"mtime":1667722625684,"results":"21","hashOfConfig":"17"},{"size":353,"mtime":1667722625685,"results":"22","hashOfConfig":"17"},{"size":294,"mtime":1667722625684,"results":"23","hashOfConfig":"17"},{"size":742,"mtime":1667722625685,"results":"24","hashOfConfig":"17"},{"size":86,"mtime":1667722625685,"results":"25","hashOfConfig":"17"},{"size":365,"mtime":1667722625684,"results":"26","hashOfConfig":"17"},{"size":3373,"mtime":1667725890208,"results":"27","hashOfConfig":"17"},{"size":233,"mtime":1667722625684,"results":"28","hashOfConfig":"17"},{"size":3042,"mtime":1667722625684,"results":"29","hashOfConfig":"17"},{"size":1569,"mtime":1667722625684,"results":"30","hashOfConfig":"17"},{"size":465,"mtime":1667722625684,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"9dbuwi",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"/Users/eunhasu777/projects/workspace/DearMe/client/src/index.js",[],["67","68"],"/Users/eunhasu777/projects/workspace/DearMe/client/src/App.js",[],"/Users/eunhasu777/projects/workspace/DearMe/client/src/pages/Diary.js",["69","70","71","72"],"import { useState, useContext, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport { getStringDate } from \"../util/date\";\nimport { emotionList } from \"../util/emotion\";\n\nimport MyHeader from \"../components/MyHeader\";\nimport MyFooter from \"../components/MyFooter\";\nimport MyButton from \"../components/MyButton\";\n\nconst Diary = () => {\n  const { id } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기`;\n  }, []);\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n\n      if (targetDiary) {\n        // 일기가 존재할 때\n        setData(targetDiary);\n      } else {\n        // 일기가 없을 때\n        alert(\"없는 일기입니다.\");\n        navigate(\"/\", { replace: true });\n      }\n    }\n  }, [id, diaryList]);\n\n  if (!data) {\n    return <div className=\"DiaryPage\">로딩중입니다...</div>;\n  } else {\n    const curEmotionData = emotionList.find(\n      (it) => parseInt(it.emotion_id) === parseInt(data.emotion)\n    );\n    console.log(curEmotionData);\n\n    return (\n      <div className=\"DiaryPage\">\n        <MyHeader\n          // headText={`${getStringDate(new Date(data.date))} 기록`}\n          headText={`${getStringDate(new Date(data.date)).split(\"-\")[0]}년 ${getStringDate(new Date(data.date)).split(\"-\")[1]}월 ${getStringDate(new Date(data.date)).split(\"-\")[2]}일의  기록`}\n          leftChild={\n            <button onClick={() => navigate(-1)}><img className=\"img_button\" src=\"../../assets/back.png\" /></button>\n          }\n        />\n        <article>\n          <section>\n            <h4>이 날의 기분</h4>\n            <div\n              className={[\n                \"diary_img_wrapper\",\n                `diary_img_wrapper_${data.emotion}`,\n              ].join(\" \")}\n            >\n              <img src={curEmotionData.emotion_img} style={{width: 100, height: 100}} />\n              <div className=\"emotion_descript\">\n                {curEmotionData.emotion_descript}\n              </div>\n            </div>\n          </section>\n          <section>\n            <h4>이 날의 생각</h4>\n            <div className=\"diary_content_wrapper\">\n              <p>{data.content}</p>\n            </div>\n          </section>\n        </article>\n        <MyFooter\n        leftChild={\n          <MyButton \n            text={\"삭제하기\"} \n            type={\"negative\"}\n            onClick={() => navigate(-1)} />\n        }\n        rightChild={\n          <MyButton\n            text={\"수정하기\"}\n            type={\"neutral\"}\n            onClick={() => navigate(`/edit/${data.id}`)}\n          />\n        }\n      />\n      </div>\n    );\n  }\n};\n\nexport default Diary;\n","/Users/eunhasu777/projects/workspace/DearMe/client/src/pages/Home.js",[],"/Users/eunhasu777/projects/workspace/DearMe/client/src/pages/Edit.js",["73","74"],"import { useState, useContext, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport DiaryEditor from \"../components/DiaryEditor\";\n\nconst Edit = () => {\n  const [originData, setOriginData] = useState();\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const diaryList = useContext(DiaryStateContext);\n\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName(\"title\")[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번 일기 수정`;\n  }, []);\n\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n\n      if (targetDiary) {\n        setOriginData(targetDiary);\n      } else {\n        alert(\"없는 일기입니다.\");\n        navigate(\"/\", { replace: true });\n      }\n    }\n  }, [id, diaryList]);\n\n  return (\n    <div>\n      {originData && <DiaryEditor isEdit={true} originData={originData} />}\n    </div>\n  );\n};\n\nexport default Edit;\n","/Users/eunhasu777/projects/workspace/DearMe/client/src/pages/New.js",[],"/Users/eunhasu777/projects/workspace/DearMe/client/src/components/MyHeader.js",[],"/Users/eunhasu777/projects/workspace/DearMe/client/src/util/emotion.js",[],"/Users/eunhasu777/projects/workspace/DearMe/client/src/util/date.js",[],"/Users/eunhasu777/projects/workspace/DearMe/client/src/components/MyButton.js",[],"/Users/eunhasu777/projects/workspace/DearMe/client/src/components/DiaryEditor.js",["75","76"],"/Users/eunhasu777/projects/workspace/DearMe/client/src/components/MyFooter.js",[],"/Users/eunhasu777/projects/workspace/DearMe/client/src/components/DiaryList.js",[],"/Users/eunhasu777/projects/workspace/DearMe/client/src/components/DiaryItem.js",["77","78","79","80","81"],"import { React, useState, useRef, useContext, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyButton from \"./MyButton\";\nimport { DiaryDispatchContext } from \"./../App.js\";\n\nconst DiaryItem = ({ id, emotion, content, date }) => {\n  const navigate = useNavigate();\n  const { onRemove } = useContext(DiaryDispatchContext);\n  const env = process.env;\n  env.PUBLIC_URL = env.PUBLIC_URL || \"\";\n\n  const strDate = new Date(parseInt(date)).toLocaleDateString();\n\n  const goDetail = () => {\n    navigate(`/diary/${id}`);\n  };\n\n  const goEdit = () => {\n    // if(strDate!=date){\n    // }\n      navigate(`/edit/${id}`);\n  };\n\n  const delDiary = () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      onRemove(id);\n      navigate(\"/\", { replace: true });\n    }\n  }\n  return (\n    <div className=\"DiaryItem\">\n      <div\n        onClick={goDetail}\n        className={[\n          \"emotion_img_wrapper\",\n          `emotion_img_wrapper_${emotion}`,\n        ].join(\" \")}\n      >\n        <img src={process.env.PUBLIC_URL + `assets/emotion${emotion}.png`} />\n      </div>\n      <div onClick={goDetail} className=\"info_wrapper\">\n        <div className=\"diary_date\">{strDate}</div>\n        <div className=\"diary_content_preview\">{content.slice(0, 25)}</div>\n      </div>\n      <div className=\"btn_wrapper\">\n        <MyButton onClick={goEdit} text={\"수정하기\"} type={\"neutral\"} />\n        <MyButton onClick={delDiary} text={\"삭제하기\"} type={\"negative\"} />\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryItem;","/Users/eunhasu777/projects/workspace/DearMe/client/src/components/EmotionItem.js",["82"],"import React from \"react\";\n\nconst EmotionItem = ({\n  emotion_id,\n  emotion_img,\n  emotion_descript,\n  onClick,\n  isSelected,\n}) => {\n  return (\n    <div\n      onClick={() => onClick(emotion_id)}\n      className={[\n        \"EmotionItem\",\n        isSelected ? `EmotionItem_on_${emotion_id}` : `EmotionItem_off`,\n      ].join(\" \")}\n    >\n      <img src={emotion_img} />\n      <span>{emotion_descript}</span>\n    </div>\n  );\n};\n\nexport default React.memo(EmotionItem);\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":20,"column":6,"nodeType":"89","endLine":20,"endColumn":8,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":37,"column":6,"nodeType":"89","endLine":37,"endColumn":21,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":53,"column":50,"nodeType":"95","endLine":53,"endColumn":108},{"ruleId":"93","severity":1,"message":"94","line":65,"column":15,"nodeType":"95","endLine":65,"endColumn":89},{"ruleId":"87","severity":1,"message":"88","line":16,"column":6,"nodeType":"89","endLine":16,"endColumn":8,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"91","line":31,"column":6,"nodeType":"89","endLine":31,"endColumn":21,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":5,"column":42,"nodeType":"100","messageId":"101","endLine":5,"endColumn":50},{"ruleId":"98","severity":1,"message":"102","line":48,"column":9,"nodeType":"100","messageId":"101","endLine":48,"endColumn":21},{"ruleId":"98","severity":1,"message":"103","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"104","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":33},{"ruleId":"98","severity":1,"message":"105","line":1,"column":47,"nodeType":"100","messageId":"101","endLine":1,"endColumn":56},{"ruleId":"98","severity":1,"message":"106","line":1,"column":58,"nodeType":"100","messageId":"101","endLine":1,"endColumn":69},{"ruleId":"93","severity":1,"message":"94","line":39,"column":9,"nodeType":"95","endLine":39,"endColumn":78},{"ruleId":"93","severity":1,"message":"94","line":18,"column":7,"nodeType":"95","endLine":18,"endColumn":32},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["110"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["111"],["112"],"no-unused-vars","'MyFooter' is defined but never used.","Identifier","unusedVar","'handleRemove' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"113","fix":"117"},{"desc":"115","fix":"118"},"Update the dependencies array to be: [id]",{"range":"119","text":"120"},"Update the dependencies array to be: [id, diaryList, navigate]",{"range":"121","text":"122"},{"range":"123","text":"120"},{"range":"124","text":"122"},[716,718],"[id]",[1076,1091],"[id, diaryList, navigate]",[549,551],[874,889]]